/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define default_layer 0
#define lower_layer 1
#define raise_layer 2
#define adjust_layer 3
#define extra 4

/ {
    combos {
        compatible = "zmk,combos";

        double_quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <32 27>;
            timeout-ms = <30>;
        };

        bt_tog {
            bindings = <&mo 6>;
            key-positions = <50 51>;
            timeout-ms = <30>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <31 33>;
            timeout-ms = <30>;
        };

        equals {
            bindings = <&kp EQUAL>;
            key-positions = <33 32>;
            timeout-ms = <30>;
        };

        numbers_layer {
            bindings = <&mo 3>;
            key-positions = <53 54>;
            timeout-ms = <30>;
        };

        single_quote {
            bindings = <&kp APOS>;
            key-positions = <28 31>;
            timeout-ms = <30>;
        };

        dash {
            bindings = <&kp MINUS>;
            key-positions = <28 26>;
            timeout-ms = <30>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <27 26>;
            timeout-ms = <30>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <26 33>;
            timeout-ms = <30>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <25 34>;
            timeout-ms = <30>;
        };

        left_paren {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 19>;
            timeout-ms = <30>;
        };

        right_paren {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <40 45>;
            timeout-ms = <30>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <15 20>;
            timeout-ms = <30>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <39 46>;
            timeout-ms = <30>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <14 21>;
            timeout-ms = <20>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <38 47>;
            timeout-ms = <30>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <13 22>;
            timeout-ms = <30>;
        };

        backtick {
            bindings = <&kp GRAVE>;
            key-positions = <37 48>;
            timeout-ms = <30>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <31 30>;
            timeout-ms = <30>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <28 29>;
            timeout-ms = <30>;
        };

        caps {
            bindings = <&mo 4>;
            key-positions = <52 55>;
            timeout-ms = <30>;
        };

        you {
            bindings = <&you>;
            key-positions = <20 21>;
            timeout-ms = <30>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <32 31 33>;
        };

        core {
            bindings = <&core>;
            key-positions = <39 34 26>;
        };

        arrow_func {
            bindings = <&arrow_func>;
            key-positions = <10 9>;
        };

        tabL {
            bindings = <&kp TAB>;
            key-positions = <14 26>;
        };

        k {
            bindings = <&kp K>;
            key-positions = <31 45>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <21 33>;
        };

        opt_backspace {
            bindings = <&kp LA(BACKSPACE)>;
            key-positions = <18 19>;
            timeout-ms = <30>;
        };

        opt_delete {
            bindings = <&kp LA(DELETE)>;
            key-positions = <16 15>;
        };

        cmd_backspace {
            bindings = <&kp LG(BACKSPACE)>;
            key-positions = <44 45>;
            timeout-ms = <30>;
        };

        cmd_delete {
            bindings = <&kp LG(DELETE)>;
            key-positions = <39 40>;
        };

        ue {
            bindings = <&ue>;
            key-positions = <20 32>;
        };

        sc {
            bindings = <&sc>;
            key-positions = <27 39>;
        };

        y. {
            bindings = <&y_period>;
            key-positions = <21 34>;
        };

        select_line {
            bindings = <&select_line>;
            key-positions = <37 38>;
        };

        enter_left {
            bindings = <&kp ENTER>;
            key-positions = <26 27 28>;
        };

        lk {
            bindings = <&lk>;
            key-positions = <19 31>;
        };

        sticky_num {
            bindings = <&sl 3>;
            key-positions = <54 31 32>;
        };

        sticky_num_left {
            bindings = <&sl 3>;
            key-positions = <27 28 53>;
        };
    };

    macros {
        you: you {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Y &kp O &kp U>;
            label = "YOU";
        };

        core: core {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(C) &kp LS(O) &kp LS(R) &kp LS(E) &kp MINUS>;
            label = "CORE";
        };

        arrow_func: arrow_func {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp SPACE &kp EQUAL &kp GT &kp SPACE &kp LBRC>;
            label = "ARROW_FUNC";
        };

        ue: ue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp U &kp E>;
            label = "UE";
        };

        sc: sc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp C>;
            label = "SC";
        };

        y_period: y_period {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Y &kp DOT>;
            label = "Y_PERIOD";
        };

        select_line: select_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HOME &kp LS(END)>;
            label = "SELECT_LINE";
        };

        lk: lk {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp K>;
            label = "LK";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            display-name = "colemak";
            bindings = <
&kp ESC            &kp N1  &kp N2  &kp N3     &kp N4               &kp N5                                      &kp N6        &kp N7               &kp N8     &kp N9   &kp N0         &kp EQUAL
&kp DOUBLE_QUOTES  &kp Q   &kp W   &kp F      &kp P                &kp G                                       &kp J         &kp L                &kp U      &kp Y    &kp SEMICOLON  &kp PIPE
&kp SINGLE_QUOTE   &kp A   &kp R   &kp S      &kp T                &kp D                                       &kp H         &kp N                &kp E      &kp I    &kp O          &kp COLON
&kp LEFT_SHIFT     &kp Z   &kp X   &kp C      &kp V                &kp B         &kp LG(TAB)    &kp BACKSPACE  &kp K         &kp M                &kp COMMA  &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
                                   &kp LCTRL  &mt LEFT_ALT RETURN  &kp LEFT_GUI  &lt 2 SPACE    &lt 2 SPACE    &kp LEFT_GUI  &mt LEFT_ALT RETURN  &kp LCTRL
            >;
        };

        qwerty {
            display-name = "qwerty";

            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC         &kp N1  &kp N2  &kp N3     &kp N4               &kp N5                                                      &kp N6                  &kp N7               &kp N8     &kp N9   &kp N0    &kp EQUAL
&lt 3 TAB       &kp Q   &kp W   &kp E      &kp R                &kp T                                                       &kp Y                   &kp U                &kp I      &kp O    &kp P     &lt 3 MINUS
&lt 3 ENTER     &kp A   &kp S   &kp D      &kp F                &kp G                                                       &kp H                   &kp J                &kp K      &kp L    &kp SEMI  &lt 3 ENTER
&kp LEFT_SHIFT  &kp Z   &kp X   &kp C      &kp V                &kp B                   &kp LA(BACKSPACE)    &kp BACKSPACE  &kp N                   &kp M                &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                                &kp LCTRL  &mt LEFT_ALT RETURN  &mt LEFT_GUI BACKSPACE  &lt 2 SPACE          &lt 2 SPACE    &mt LEFT_GUI BACKSPACE  &mt LEFT_ALT RETURN  &kp LCTRL
            >;
        };

        arrows+braces {
            display-name = "arrows+braces";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &kp F12        &kp LS(F12)      &kp K_MUTE         &kp C_VOL_DN           &kp C_VOLUME_UP                              &studio_unlock      &kp LG(LA(LEFT))    &kp LG(LA(RIGHT))  &ext_power EP_TOG  &ext_power EP_OFF  &ext_power EP_ON
&kp TILDE  &kp NUMBER_1   &kp NUMBER_2     &kp NUMBER_3       &kp NUMBER_4           &kp N5                                       &kp NUMBER_6        &kp N7              &kp N8             &kp N9             &kp N0             &kp DOUBLE_QUOTES
&kp GRAVE  &kp PIPE       &kp LEFT_BRACE   &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS   &kp COLON                                    &kp LG(LEFT_ARROW)  &kp LEFT            &kp UP_ARROW       &kp DOWN           &kp RIGHT          &kp SINGLE_QUOTE
&kp HOME   &kp BACKSLASH  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp SEMI         &kp LG(GRAVE)    &kp LC(W)  &kp UNDER           &kp MINUS           &kp PLUS           &kp PERIOD         &kp BACKSLASH      &kp END
                                           &kp LCTRL          &mt LEFT_ALT ENTER     &kp LEFT_SHIFT   &kp SPACE        &kp SPACE  &kp DELETE          &mt LEFT_ALT ENTER  &kp LCTRL
            >;
        };

        numbers {
            display-name = "numbers";

            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &trans        &trans        &trans        &trans        &trans                               &trans        &trans         &trans     &trans                &trans                 &trans
&kp TILDE  &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT                          &kp CARET     &kp AMPERSAND  &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp SPACE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                               &kp NUMBER_6  &kp N7         &kp N8     &kp N9                &kp N0                 &kp ENTER
&trans     &trans        &trans        &trans        &trans        &trans       &trans       &trans     &kp UNDER     &kp MINUS      &kp PLUS   &kp PERIOD            &kp KP_SLASH           &kp DELETE
                                       &kp LCTRL     &kp LEFT_ALT  &trans       &kp SPACE    &kp SPACE  &trans        &kp LEFT_ALT   &kp LCTRL
            >;
        };

        caps {
            display-name = "CAPS";
            bindings = <
&kp ESC         &kp N1     &kp N2     &kp N3     &kp N4               &kp N5                                            &kp N6        &kp N7               &kp N8     &kp N9     &kp N0         &kp EQUAL
&lt 3 TAB       &kp LS(Q)  &kp LS(W)  &kp LS(F)  &kp LS(P)            &kp LS(G)                                         &kp LS(J)     &kp LS(L)            &kp LS(U)  &kp LS(Y)  &kp SEMICOLON  &lt 3 MINUS
&lt 3 ENTER     &kp LS(A)  &kp LS(R)  &kp LS(S)  &kp LS(T)            &kp LS(D)                                         &kp LS(H)     &kp LS(N)            &kp LS(E)  &kp LS(I)  &kp LS(O)      &lt 3 ENTER
&kp LEFT_SHIFT  &kp LS(Z)  &kp LS(X)  &kp LS(C)  &kp LS(V)            &kp LS(B)     &kp LA(BACKSPACE)    &kp BACKSPACE  &kp LS(K)     &kp LS(M)            &kp COMMA  &kp DOT    &kp FSLH       &kp RIGHT_SHIFT
                                      &kp LCTRL  &mt LEFT_ALT RETURN  &kp LEFT_GUI  &lt 2 SPACE          &lt 2 SPACE    &kp LEFT_GUI  &mt LEFT_ALT RETURN  &kp LCTRL
            >;
        };

        sticky_layer {
            display-name = "Sticky";

            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &trans        &trans        &trans        &trans        &trans                           &trans        &trans         &trans        &trans                &trans                 &trans
&kp GRAVE  &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT                      &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp F10    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                           &kp NUMBER_6  &kp N7         &kp N8        &kp N9                &kp N0                 &trans
&kp F11    &kp F1        &kp F2        &kp F3        &kp F4        &kp F5       &trans     &trans   &kp F6        &kp F7         &kp F8        &kp F9                &kp F10                &kp BSLH
                                       &trans        &trans        &trans       &kp F10    &kp F11  &trans        &trans         &trans
            >;
        };

        bt_and_layer_toggle {
            display-name = "BT";

            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4                            &trans  &trans  &trans  &trans  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_UP
&trans          &trans          &mmv MOVE_UP    &trans           &trans        &trans                                  &trans  &trans  &trans  &trans  &kp C_BRIGHTNESS_DEC  &kp C_VOLUME_DOWN
&trans          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans        &msc SCRL_DOWN                          &trans  &trans  &trans  &trans  &trans                &trans
&tog 1          &trans          &trans          &trans           &trans        &msc SCRL_UP    &mkp LCLK    &mkp RCLK  &trans  &trans  &trans  &trans  &trans                &kp K_MUTE
                                                &trans           &trans        &trans          &trans       &trans     &trans  &trans  &trans
            >;
        };
    };
};
